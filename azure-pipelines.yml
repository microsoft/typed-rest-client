parameters:
- name: versionSpec
  type: object
  default:
  - '6'
  - '8'
  - '10'
  - '12'
  - '14'
  - '16'

- name: os
  type: object
  default:
  - 'windows-latest'
  - 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build typed-rest-client
  jobs:
  - job: Build_and_Publish
    displayName: Build and Publish artifact
    steps:
    #build on node 8.x
    - task: NodeTool@0
      inputs:
        versionSpec: '8.x'
      displayName: Install node 8

    - script: npm install
      displayName: npm install

    - script: npm run build
      displayName: npm run build

    #publish if needed
    # - task: PublishBuildArtifacts@1
    #   condition: and(succeeded(), in(variables['publishBuild'], 'true'))
    #   inputs:
    #     PathtoPublish: "_build"
    #     ArtifactName: "drop"
    #     ArtifactType: "Container"
    #   displayName: Publish build artifacts

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: _build
        artifactType: pipeline
        artifactName: _build

- stage: Test
  jobs:
  - ${{ each nodeVersion in parameters.versionSpec }}:
    - ${{ each os in parameters.os }}:
      - job: Node_${{ nodeVersion }}
        displayName: Node.js ${{ nodeVersion }}
        steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: _build
            path: $(Build.SourcesDirectory)/_build
            patterns: '!package-lock.json' #Exclude package-lock.json

        - script: npm install
          displayName: npm install

        #run unit tests on different node versions
        - task: NodeTool@0
          inputs:
            versionSpec: ${{ nodeVersion }}.x
          displayName: Install node ${{ nodeVersion }}
        - script: npm run units
          displayName: npm run units
        - script: npm run test
          displayName: npm run test
